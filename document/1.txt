International Workshop on Artificial Intelligence for Industrial Applications 1988 HIGHER-LEVEL CAUSAL REASONING FOR DIAGNOSIS Philip Schaefer Martin Marietta Astronautics Group P.O Box 179 M.S 4443 Denver CO 80201 USA ABSTRACT Causal Reasoning provides a useful paradigm for diagnosis as it provides a degree of flexibility not available from many conventional AI techniques Most causal-reasoning approaches however 
reason at a detailed first principles level, although module-level diagnosis is often all that is required This paper presents a higher-level technique for causal reasoning and diagnosis Modules are the basic components in the resulting representation Considerations unique to causal reasoning at a high level are discussed, and an algorithm and examples encorporating the resulting characteristics are presented I Introduction In recent years, the usefulness of Causal Reasoning for system analysis and diagnosis has been promoted by researchers in the AI 
field Rather than providing traditional expert systems which deal with the target system in terms of association rules about symptoms faults and repairs the Causal Reasoning approach provides a tool for analyzing the implications of the cause-and-effect structure of the system Using domain-independent diagnosis techniques it is possible to reason about which faults could cause the actual behavior to deviate from that predicted by the Causal model This "deep reasoning approach adds robustness and flexibility to the diagnosis task For many industrial applications 
the causal-reasoning approach is particularly attractiverl  For example if the design of a system is changed only the model reflecting the design change need be modified, rather than modifying multiple parts of a knowledge-engineered diagnosis task For systems which have many possible configurations such as an Initial phases of this work were done at the Center for Automation and Intelligent Systems Research Case Western Reserve University industrial controller with many optional modules additional advantages obtain Because the particular unit under 
test can be diagnosed simply by including in the causal model the parts actually present in the field and the test equipment available separate diagnostics for each of the possible configurations and test hardware need not be prepared beforehand Most Causal-Reasoning systems reason at the first principles level e.g with electronic circuits at the transistor or gate level 2,3  While theoretically sound, reasoning about a system at that level is often excessively tedious when dealing with complex, real-world industrial 
equipment This is especially true when module-level diagnosis is all that is required An alternative method is to combine the best of the two diagnosis approaches to integrate the robustness of a Causal-Reasoning approach with a higher-level view of the target system The technique described in this paper makes this integration providing Causal Reasoning on Knowledge-Engineered models of the target system modules Using models provided by domain experts, this technique accepts a description of the 
observed symptom derives test inputs to determine the nature of the anomaly, and generates further testss to be performed as the symptom is narrowed down to suspect modules An expert system FEXPR Flexible Expectation-Based Reasoner l has been constructed to demonstrate this technology II Constructing a High-level Model Building a Causal Model is accomplished by considering the target system,at the level at which diagnosis is desired as 
a network of modules  An example network of the modules for a simple microprocessor-based system is shown in Figure 1 With the aid of an expert such as a design engineer the inputs and outputs referred to as external signals of each module are enumerated Additionally various internal" signals are also defined as required for the expert to explain the 88CH2529-6/88/0000-0033 1.00 0 1988 IEEE 33 


user-in-1 n position r address  power r v analog-output  latch-value 1 1 1 ialog JtpUt DIG ITA L data-bus address-bus power-bus Figure 1 Microprocessor-based example behavior of the module For example the Analog-to-Digital A/D\card of Figure 2 has the external signals of POWER ADDRESS BOARD-POSITION and DATA-BUS  Additionally the internal LATCH-VALUE signal was thought necessary by the expert to discuss the functionality of the card In the FEXPR syntax this module would be described as defmodule ND inputs power address board-position data outputs \(analog-output data internals latch-value The next step in model construction is the specification of causal rules to describe how the appearance of values on certain sets of signals presented in the cause parts of the rule\causes values to appear on others presented in the effects" parts of the rules An example A/D causal rule is defcausal ND-1 power on\and address X and board-position X and data Y causes latch-value Y Figure 3 contains the set of modules and causal rules to describe the example system of Figure 1 When the set of module definitions and causal rules is complete the expert's picture of how each module functions in isolation say on a test bench has been Figure 2 The A/D module with signals defmodule ND inputs \(power address board-position data outputs \(analog-output data internals latch-value defcausal ND-1 power on and address A and data D and board-position A causes latch-value D defcausal ND-2 power on and latch-value L\causes analog-output  L 100 defmodule CPU inputs \(cpu-power user-in-1 user-in-2 outputs data-lines address-lines defcausal CPU-1 cpu-power on and user-in-1 A and user-in-2 D causes data-lines D address-lines A defmodule DIGITAL-OUT inputs \(dig-pwr board-position address data outputs led-out defcausal DIG ITAL-OUT-1 dig-pwr on and board-position B and address B and data D causes led-out D Figure 3 Higher-level causal model for a simple microprocessor-based system 34 


modeled The interconnection between modules must also be specified to be able to reason about the functioning of the entire system This is achieved by indicating the relevant connection points for each external signal of each module Interactions of a module with other modules will take place via the connection points which they have in common An network of connection points is defnetwork cpu-board user-in keyboard cpu-pwr power-bus data-lines data-bus address-lines address-bus power power-bus address address-bus board-position set-to 6 analog-out nil data data-bus power power-bus address address-bus board-position \(set-to 4 led-out nil ND digital-aut ex amp 1 e where ADDRESS-BUS POWER-BUS DATA-BUS etc are the connection points From this network description we know that the address input of the A/D module is connected to the "address-lines output of the CPU-board, for example III The Diagnosis Algorithm The fundamental notion in a higher-level diagnosis scheme is that faults in a target system will correspond to a discrepancy between the signal values derived from causal rules and the actual signal values Fault diagnosis, therefore is a process of finding the modules whose causal rules are violated One frequent approach to diagnosis is the use of faulted component models 4  In this approach the various known faulty states of components are modeled and the fault models are inserted into the causal network to test hypotheses about possible faults Because high-level rules rather than first-principles relations are used as models in the diagnosis task however, it would not generally be feasible to apply this technique This is because the faults in the target system will occur at the "physics" level Each causal rule or module may correspond to many diverse physical processes making the modeling of all possible faulted states very difficult indeed Rather it appears more appropriate to use a technique similar in spirit to 3 in which faults are isolated by finding causal relationships which appear not to hold In the case of higher-level reasoning this would mean locating the sets of causal rules whose cause parts are all true but whose effects" parts are not all true Another issue is the number of faults which should be assumed during the diagnosis task With higher-level models each causal relationship may correspond to many physical processes Conversely a single physical process may take part in many higher-level causal relationships For example a single physical fault in a microprocessor could affect many of the higher-level relationships describing the behavior of software running on that microprocessor Therefore it is clear that a single-fault assumption is not appropriate for this diagnosis task Some approaches use an N-faults technique, wherein N causal relationships at a time are suspended, to see if the rest of the system appears to follow its expected causal behavior 3  In a first-principles approach this is quite appropriate, because one can expect a good mapping between faults and causal relationships if the correct physical perspective of the system is taken 31 However, with the more abstract models at hand, such a mapping cannot be assumed making the choice of how many faulty rules to hypothesize unclear Additionally suspending the models of all sets of n causal rules becomes computationally impractical for large values of N Alternately, one could adopt the technique of suspending all rules for N modules at a time but with a loss of efficacy because partial functionality of a module often yields the most useful information about its faults The solution presented here therefore is to assume that multiple faults may be present but to make no commitment as to how many may exist The resulting diagnosis algorithm is 1 Determine the set of causal rules which show how the target system should have yielded the correct outputs for the inputs which were applied 2 For each of the rules from l look for evidence that the cause parts of the rule were true but that the effect"parts were not all true 3 When a set of rules meeting the criterion of 2 are found the fault has been diagnosed 4 If a complete diagnosis has not been achieved fn 31 Gather the set of modules for which not enough evidence was obtained either to confirm or refute expected signal values These are the suspected modules which for example may be individually tested 35 


Successful diagnosis in step 3 is easiest for a system with many modules connecting to relatively few common points, such as a bus-oriented system Systems with many modules connected in serial will be the most difficult to diagnose with this algorithm The following subsections discuss the details of the required operations along with examples from the system of Figure 1 1II.A Finding Causal Rules Relevant to a Symptom A symptom requiring diagnosis will be defined as a set of output signal values which violate expectations the expected values for those outputs and the input signal values which failed to produce the expected results Consider the example symptom stated in English With USER-INPUT-2 of 52 I expected 52 volts at ANALOG-OUTPUT but observed 1.3 volts A malfunction symptom indicates that some causal relations which should hold in the system have been violated The violated relations will be among those which should have contributed to the expected output signal values Therefore to find which causal rules could contribute to the expectation violation those rules which show a mapping from the inputs to the expected, but violated outputs need to be found One way to find these relevant rules is to perform a backward-chaining search from the violated output values to the inputs with the constraint that the derived inputs must include the values of the symptom input set In the example to have 52 volts at the ANALOG-OUTPUT point rules A/D-1 A/D-2 would be matched to find the need for the POWER-BUS to have a value of ON the ADDRESS-BUS to have a values of 6 and a DATA-BUS value of 52 Continuing rules from the CPU-board module would similarly be used to find inputs USER-INPUT-1 of 52 and USER-INPUT-2 of 6 The set of relevant rules would therefore be A/D-l A/D-2, and CPU-1 In addition to backward chaining to find inputs, a forward-chaining operation needs to be performed to guard against undesired side effects This could occur for example if a causal rule had more effect parts than the one matched in the backward-chaining operation Such side effects could combine to cause other side effects, eventually resulting in a goal conflict In the example however such side effects do not occur 1II.B Inferring Signal Values In order to find causal rules whose cause parts are all true but whose effect" parts are not all true it is necessary to infer the actual values of the signals referenced by the relevant causal For very rules that have been found simple systems it would be practical to determine all such signal values by direct measurement e.g with a voltmeter However for many applications some signals are much easier to measure than others In the example system the LED values would be very easy the ANALOG-OUTPUT more difficult and the DATA-BUS values very difficult And because the causal rules are a high level description of how the device functions it is even possible to have abstract signals which do not correspond to physical points and hence are not, in principle, possible to measure Fortunately techniques have been developed which allow much more efficient value inference by finding indirect measurements when appropriate to obtain the necessary evidence III.B.l Evidence Rules To obtain indirect evidence about signal values knowledge of the structure and relationships between signals is necessary One of the interesting complications of the high-level causal algorithm however is that while evidence about the actual signal values for one suspected rule is being sought one cannot assume that the other rules do hold because of the no N-fault assumption" property discussed previously Because of this complication, causal rules cannot directly be used to make inferences about signal values Even if the N-fault technique were used at the module level and evidence about signals were restricted to come from other modules sharing common signals, problems would arise This idea would work for systems where complete models for components were available 2,3,51  However with higher-level modeling incomplete models may be commonplace In the example system the only explanation from causal rules for 0 volts on ANALOG-OUTPUT is a 0 on the DATA-BUS  In practice though the absence of power would also yield 0 volts In modeling the A/D board one can see the expert did not consider an unpowered board as a useful thing to describe The solution adopted here is to knowledge-engineer evidence rules to augment the causal rules Evidence rules are also higher-level rules but indicate sets of signal values in their known antecedant parts which give reasonable 36 


confidence about the signal values in their inferrable" \(consequent parts If the known" parts are believed to be true, from measurement or from other evidence rules the "inferrable" parts will be believed to be true An important feature is that unlike causal rules, the evidence rules do not assume a correctly-functioning module The underlying notion is to capture relations which would be highly unlikely to be coincidences To this end evidence rules may reference the expected values of signals as determined by causal rules for a correctly-functioning device Examples of evidence rules in the FEXPR syntax are shown in Figure 4 defevidence digital-out-1 led-out X implies power on defevidence digital-out-2 board-position P and led-out L withconditions expected-that data L and expected-that address P implies data L defevidence ND-1 analog-output A with-conditions e A 0 implies power on Figure 4 Example evidence rules for the system shown in Figure 1 Consider the phase of diagnosis in which the signals of causal rule A/D-2 are being checked The first check is for the cause" part power on One way to check this would be to request measurement of the voltage of the POWER-BUS However before asking for a new measurement the algorithm looks for evidence rules about that signal Evidence rules digital-out-1 and A/D-1 are found Because the symptom stated that 13 volts was measured at ANALOG-OUTPUT rule A/D-1 gives indication that power on is actually true If the evidence about ANALOG-OUTPUT were not available the system would have used the digital-out-1 rule to ask  Is there an oulput on LED-OUT which, in that case would have been the easiest way to find evidence about the power signal LII.B.2 Test Input Generation In some cases, finding evidence requires more than measurement of signal values while the target system is in the state in which the symptom occurred This could happen when the only evidence rules for a signal have known parts which are not currently true but which could be true with appropriate new user inputs For example, consider the case where it is necessary to test for the data 52 cause part of causal rule A/D-l The only evidence rule about this signal is digital-out-2 but it has expected-that The address 4 as a known part following algorithm is used to handle such cases by generating inputs to meet the evidence rule requirements When looking for evidence about signal S given the set of causal rules C which should have yielded the desired value of S and evidence rule E which potentially could yield evidence about s 1 Set up the known parts of the evidence rule E as goals to be achieved 2 Use the backward-chaininq algorithm described above to find the appropriate user inputs to achieve the goals found in 1 Be sure to use the set C of causal rules in the solution to substantiate that S will have the desired value iff it did before 3 Find evidence about the known parts of the evidence rule E to determine if evidence about S exists Note that this procedure may be called recursively, such that multiple levels of test input may be required to find evidence about particularly well-buried" signals For the example discussed above the signal S would be data-bus 521 C would be causal rules A/D-1 and CPU-1 and E would be evidence rule digital-out-2 The signal goal would then be led-out 52 The backward-chaining process would culminate with the input request  Please enter the following Set USER-INPUT-1 to 52 Set USER-INPUT to 4 which would be followed by request  What is the value on LED-OUT mea suremen t If it were 52 it could be inferred that the DATA-BUS value was indeed 52 By similar techniques if it were determined that the ADDRESS-BUS value was indeed originally 6 all of the cause" parts of the A/D module rules which should have resulted in the ANALOG-OUTPUT being 52 would have been verified Therefore diagnosis would indicate a fault with the A/D board, whose causal rules did not hold 37 


IV Conclusions Using Higher-level Causal Reasoning has shown to be a useful technique for introducing the flexibility of causal reasoning to complex systems for which module-level diagnosis is desired The use of higher-level reasoning however introduces unique additional considerations Methods of assuming n faults to be present fail due to the many-to-many mapping between physical processes and high-level causal relationships Additionally incompleteness in knowledge-engineered causal rules prevents their use for accurate inference about the internal state of the system under diagnosis For these reasons, "evidence rules were introduced to complement the causal rules A prototype system FEXPR has been successfully implemented to demonstrate the higher-level causal diagnosis approach Current work includes the incorporation of temporal reasoning capabilities to allow more sophisticated diagnosis and test input generation Additionally, techniques for a more automatic generation of evidence rules based on causal rules and properties of classes of modules and their consitituent signals are being considered REFERENCES l P Schaefer and H.A Guvenir Using Expert Systems to Troubleshoot Microprocessor Based Control Systems An Expectation Based Approach IFAC Symp Microcomputer Application in Process Control 1986 2 J DeKleer and J.S Brown A Qualitative Physics based on Confluences in Qualitative Reasoning about Physical Systems Elsevier Science Publishers 1984 3 Randall Davis Diagnostic Reasoning Based on Structure and Behavior A.I.Memo 739 M.I.T June 1984 4 Yung-Choa Pan Qualitative Reasonings with Deep-Level Mechanisms for Diagnosis of Dependent Failures Ph.D Dissertation Univ Illinois at Urbana-Champaign 1983 SI Y Iwasaki and H.A Simon, "Causality in Device Behavior  Artificial Intelligence 29 pp 3-32 1986 38 


Figure 3 Current beneflts and estimated final benefits when sampling size k Increases up to K  256 for all three datesets. The error range Is 3 IK for 99.7 contldence ILI Im Y na 1 I Y rm Y na no lunpwS*.INmmnCi.m IO im In na 2s sb Wdd C.ul*\223l funm Sk.lNlunmolC.ul mation methods can effectively detect the inaccuracy of the complete model, the user can choose a smaller K We par titioned all three dataset into K  1024 partitions For the adult dataset, each partition contains only 32 examples but there are 15 attributes The estimation results are shown in Figure 4 The first observation is that the total benefits for donation and adult are much lower than the baseline This is obviously due to the trivial size of each data partition The total benefits for the credit card dataset is 750,000 which is still higher than the baseline of 733980 The second ob servation is that after the sampling size k exceeds around as small as 25 out of K  1024 or 0.5 the error bound becomes small enough implying that the total benefits by the complete model is very unlikely 99.7 confidence to increase At this point the user should cancel the learn ing for both donation and adult datasets The reason for the 223bumps\224 in the adult dataset plot is that each dataset is too small and most decision trees will always predict N most of the time At the beginning of the sampling, there is no variations or all the trees make the same predictions; when more trees are introduced it starts to have some diversities However the absolute value of the bumps are less than 50 as compared to 12435 3.5 Training Efficiency We recorded both the training time of the hatch mode single model plus the time to classify the test data and the training time of the multiple model with k  30 K clas sifiers plus the time to classify the test data k times We then computed ratio of the recorded time of the single and mul tiple models called serial improvement It is the number of limes that training the multiple model is faster than training the single model In Figure 5 we plot the serial improve ment for all three datasets using C4.5 as the base learner When K  256 using the multiple model not only provide higher accuracy but the training time is also 80 times faster for credit card 25 times faster for both adult and donation 4 Related Work Online aggregation has been well studied in database community It estimates the result of an aggregate query such as avg AGE during query processing One of the most noteworthy work is due to 7 which provides an in teractive and accurate method to estimate the result of ag gregation One of the earliest work to use data reduction techniques to scale up inductive learning is due to Chan I in which he builds a tree of classifiers In BOAT 6 Gehrke et al build multiple bootstrapped trees in memory to ex amine the splitting conditions of a coarse tree There has been several advances in cost-sensitive learning 3 Meta Cost 4 takes advantage of purposeful mis-labels to max imize total benefits In 181 Provost and Fawcett study the problem on how to make optimal decision when cost is not known precisely 5 Conclusion In this paper, we have demonstrated the need for a pro gressive and interactive approach of inductive learning where the users can have full control of the learning process An important feature is the ability to estimate the accuracy of complete model and remaining training time We have im plemented a progressive modeling framework based on av eraging ensembles and statistical techniques One impor tant result of this paper is the derivation of error bounds used in performance estimation We empirically evaluated our approaches using several inductive learning algorithms First, we find that the accuracy and training time by the pro gressive modeling framework maintain or greatly improve over batch mode learning Second the precision of estima tion is high The error hound is within 5 of the true value when the model is approximately 25  30 complete Based on our studies, we conclude that progressive mod eling based on ensemble of classifiers provide an effective 169 


Figure 4 Current benefits and estimated final estimates when sampling size k increases up to K  1024 for all three datasets To enlarge the plots when k is small we only plot up to k  50 The error range is 3 u\(uK for 99.7 confidence  Figure 5 Serial improvement jir4 for all three datasets when early stopping Is used 3 10 I 1 8 10 m s Irn 1m m zra m rn 1 m zra m Irn Im m ma WC4P.n WdP./Cn WdPb solution to the frustrating process of batch mode learning References 6 I Gehrke V Ganti R Ramakrishnan and W.-Y Loh BOAT-optimistic decision tree construction In Pro ceedings of ACM SICMOD International Conference on Management of Data SICMOD 1999 1999 7 J M Hellerstein P I Haas and H 1 Wang On line aggregation In Proceedings ofACM SIGMOD In ternationul Conference on Management of Data SIC I P Chan An Exrensible Meru-leurning Approach for Scalable and Accurare Inductive Learning PhD the sis Columbia University Oct 1996 21 W G Cochran Sampling Techniques John Wiley and Sons 1977 131 T Diettench D Margineatu E Provost, and P Tur ney editors Cost-Sensirive Learning Workshop ICML-00 2000 141 P Domingos MetaCost a general method for making classifiers cost-sensitive In Proceedings of Fifth In rernarional Conference on Knowledge Discovery and Dura Mining KDD-99 San Diego, California 1999 51 W Fan H Wang P S Yu and S Slolfo A framework for scalable cost-sensitive learning based on combin ing probabilities and benefits In Second SIAM In ternationul Conference on Datu Mining SDM2002 April 2002 MOD'97 1997 8 F Provost and T Fawcett Robust classification for imprecise environments Machine Learning 42203 23 I 2000 9 S Stolfo W Fan W Lee A Prodromidis and P Chan Credit card fraud detection using meta learning Issues and initial results In AAAI-97 Work shop on FraudDerecrion andRisk Management 1997 Obtaining calibrated probability estimates from decision trees and naive bayesian classifiers In Proceedings of Eigk teenth International Conference on Machine Learning ICML'Z001 2001 IO B Zadrozny and C Elkan 170 


association-cube, base-cube and population-cube are derived from the volume cube; the confidence-cube is derived from the association cube and population cube and the support-cube is derived from the associationcube and base-cube. The slices of these cubes shown in Figure 2 correspond to the same list of values in dimension merchant, time, area and customer_group  Multidimensional and multilevel rules Representing association rules by cubes and underlying cubes by hierarchical dimensions, naturally supports multidimensional and multilevel rules. Also these rules are well organized and can be easily queried  First, the cells of an association cube with different dimension values are related to association rule instances in different scopes. In the association cube CrossSales cell CrossSales product \221A\222, product2 \221B\222  customer_group 221engineer\222, merchant \221Sears\222, area \221Los Angeles\222, time 221Jan98\222 represents the following multidimensional rule x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x,\221B\222  275 customer_group = \221engineer\222, merchant = \221Sears\222, area 221Los  Angeles\222, time =  \221Jan98\222 If this cell has value 4500, and the corresponding cell in the population cube has value 10000, then this rule has confidence 0.45 Next as the cubes representing rules can have hierarchical dimensions, they represent not only multidimensional but also multi-level association rules. For example, the following cells CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221Jan98\222 CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221 Year98 222 represent association rules at different area levels \(i.e the city level and the state level\d different time levels \(i.e., the month level, the year level x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221Jan98\222 x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221 Year98 222 The cell CrossSales\(product \221A\222, product2 \221B\222,  customer_group 221top\222, merchant \221top\222, area \221top\222,  time \221top\222 represents the customer-based cross-sale association rule for all customers, merchants, areas, and times in the given range of these dimensions, expressed as x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222 4.3  Generating Association Rule Related Cubes The basic task of our OLAP based association rule mining framework, either at the GDOS or at an LDOS is to convert a volume cube i.e. the cube representing the purchase volumes of customers dimensioned by product  area etc, into an association cube a base cube and a population cube These cubes are then used to derive the confidence cube and the support cube of multidimensional association rule instances. The following general steps are involved in cross-sale association rule mining 267  Roll up the volume cube SaleUnits by aggregating it along merchant, time, area dimensions 267  Derive cube NumOfBuyers from SaleUnits based on the antecedent condition SaleUnits 0 267  Populate cube NumOfShoppers by the counts of customers dimensioned by merchant, area  time not by product\at satisfy the antecedent conditions 267  Derive cube CrossSales from SaleUnits based on the association conditions SaleUnits  product  p 1  0 and SaleUnits  product2  p 2 0 267  Derive cube Confidence and cube Support using cell-wise operations 214  Confidence = CrossSales  NumOfBuyers 214  Support  CrossSales  NumOfShoppers  Cubes Confidence  Support  CrossSales are dimensioned by product  product2 customer_group,merchant  time, area NumOfBuyers is dimensioned by product  customer_group, merchant time, area  NumOfShoppers is dimensioned by customer_group, merchant  time, area Rules with confidence and support that exceed specified thresholds  may be considered interesting 4.4. Rules with Conjoint Items Cubes with conjoint dimensions can be used to represent refined multidimensional association rules For example, using OLAP, we can derive association rules across time  Time-variant or temporal association rules such as 


x 316 Customers buy_product\(x,\222 A\222, \221 Jan98\222  336 buy _product\(x, \221B\222, \221 Feb98\222   275 area = \221Los Angeles\222 can be used to answer such questions as \223 How are  the sales of B in Feb98  associated with the sales of A in Jan98 224 The items in this rule are value pairs of dimensions product and time In order to specify this kind of association rule we introduce a conjoint dimension product, time and mirror it with dimension product2, time2 This allows a cell in the association cube to cross two time values. Accordingly, the cubes related to association rule mining are defined as follows Association cube  CrossSales.2 \(<product, time>, <product2, time2 customer_group, merchant, area  Population cube  NumOfBuyers.2  \(<product, time>, customer_group merchant, area Base cube  NumOfShoppers.2  \( customer_group, merchant, area Confidence cube Confidence.2 \(<product, time>, <product2, time2 customer_group, merchant, area Support  cube  Support.2  product, time>, <product2, time2 customer_group, merchant, area  The steps for generating these cubes are similar to the ones described before. The major differences are that a cell is dimensioned by, besides others product, time and product2, time2 and the template of the association condition is  SaleUnit s  product p 1 time t 1  0 and  SaleUnits  product2 p 2 time2 t 2  0 where, in any instance of this condition, the time expressed by the value of time2 is not contained in the time expressed by the value of time The template of the antecedent condition is SaleUnits   product p 1 time t 1  0 In general, other dimensions such as area may be added to the conjoint dimensions to specify more refined rules 4.5. Functional Association Rules A multidimensional association rule is functional if its predicates include variables, and the variables in the consequent are functions of those in the antecedent.  For example, functional association rules can be used to answer the following questions, where a_month and a_year are variables q  What is the percentage of people in California who buy a printer in the next month after they bought a PC x 316 Customer buy_product\(x, \221PC\222, a_ month 336 buy_product\(x, \221printer\222, a_month+1  275 area = \221California\222 q  What is the percentage of people who buy a printer within the year when they bought a PC  x 316 Customer: buy_product\(x, \221PC\222, a_ year 336 buy_product\(x, \221printer\222, a_year 275 area = \221California\222 To be distinct, we call the association rules that are not functional as instance association rules; e.g x 316 Customer: buy_product\(x,\222 PC\222, \221Jan98\222 336 buy_product\(x,\222 printer\222, \221Feb98\222  275 area =  \221California\222 Time variant, functional association rules can be derived from time variant, instance association rules through cube restructuring. Let us introduce a new dimension time_delta that has values one_day, two_day 205, at the day level, and values one_month, two_month, \205, at the month level, etc. Then, let us consider the following functional association rule related cubes Association cube  CrossSales.3 \(product, product2, customer_group merchant, area, time_delta  Population cube  NumOfBuyers.3 \(product, customer_group, merchant area Base cube  NumOfShoppers.3 \( customer_group, merchant, area Confidence cube  Confidence.3 \(product, product2, customer_group merchant, area, time_delta Support cube  Support.3 \(product, product2, customer_group, merchant area, time_delta The association cube CrossSales.3  can be constructed from CrossSales.2   The cell values of CrossSales.2  in the selected time and time2 ranges are added to the corresponding cells of CrossSales.3 For example, the count value in cell  CrossSales.2\(<PC, Jan98>, <printer, Feb98>\205 is added to cell \(bin CrossSales.3\(PC, printer, one_month,\205 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


